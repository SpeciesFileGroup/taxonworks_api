#%RAML 1.0
---
title: TaxonWorks
documentation:
  - title: Introduction
    content: |
      Documentation for JSON API endpoints in TaxonWorks. The most upto date list of endpoints can be seen by running `rake routes | grep api`.
version: v1
baseUri: https://{host}/api/{version}
baseUriParameters:
  host:
    description: The server host optionally with port at with the API is located
    example: linnaeus.taxonworks.org
protocols: [ HTTPS ]
securitySchemes:
  token:
    type: Pass Through # Not supported by api-console unfortunately but should be like traits/secured.raml
    description: |
      Token based per-use authentication.
    describedBy:
      headers:
        Authorization:
          description: |
            Generated by the user within the Users profile.
          type: string
          example: Token eUUB4dQCCWlLGzksimEqNQ
mediaType: application/json

resourceTypes:
  collection:
    usage: This resourceType should be used for any collection of items
    description: The collection of <<resourcePathName>>
    get:
      description: Get all <<resourcePathName>>, optionally filtered
  member:
    displayName: id
    description: The id of the <<resourcePathName>> to return.
    get:

types:
  TaxonNameItem: !include /schemas/TaxonNameItem.raml

traits:
  secured: !include /traits/secured.raml
  development: !include /traits/development.raml
  production: !include /traits/production.raml
  future_branch: !include /traits/future_branch.raml
  project_tokenized: !include /traits/project_tokenized.raml
  pageable: !include /traits/pageable.raml

/:
  description: Base of the API. Includes an index of open projects indexed by project_token.
  get:
    responses:
      200:
        body:
          application/json:
            example:
              {"success":true,"open_projects":[{"mFPoRURskHhXu29nbAxoNy":"My TaxonWorks Project"}]}

/ping:
  description: An open endpoint to test for life.
  get:
    responses:
      200:
        body:
          application/json:
            example:
              {"pong": true}

/user_authenticated:
  description: A single purpose route to test your User token.
  is: secured
  get:
    responses:
      200:
        body:
          application/json:
            example:
              {"success": true}

/project_authenticated:
  description: A single purpose route to test your Project token.
  is: [project_tokenized]
  get:
    responses:
      200:
        body:
          application/json:
            example:
              {"success": true}

/both_authenticated:
  description: A single purpose route to test both User and Project tokens.
  is: [secured, project_tokenized]
  get:
    responses:
      200:
        body:
          application/json:
            example:
              {"success": true}

/otus:
  is: [secured, project_tokenized]
  description: See Overview at http://rdoc.taxonworks.org/Otu.html
#  securedBy: token
  type: collection

/taxon_names:
  is: [secured, project_tokenized]
  description: See Overview at http://rdoc.taxonworks.org/TaxonName.html
#  securedBy: token
  type: collection
  get:
    is: [pageable: { default_per: 100, max_per: 1000 }]
    queryParameters:
      name:
        description: |
          Filter to apply on full taxon name (`cached` property). Matching is case insensitive. See also `exact`.
        type: string
        required: false
        example: "Aus"
      author:
        description: |
          Filter by authors (inside `cached_author_year` property). Matching is case insensitive. Use "&" for "and". See also `exact`.
        type: string
        required: false
        example: "Smith & Johnson, 2019"
      year:
        description: |
          Filter by authority year (inside `cached_author_year` property). Format is 'YYYY'.
        type: string
        pattern: "[0-9]{4}"
        required: false
        example: "2019"
      exact:
        description: |
          True if filter matching must be exact, false if partial matches are allowed.
        type: boolean
        required: false
        default: false
        example: true
      updated_since:
        description: |
          Names updated (modified_at property) since this datetime.
        type: datetime
        required: false
        example: 2019-05-20T13:30:00
      validity:
        description: |
          Filter by validity. True if only valid, false if only invalid, nil if both
        type: string | nil
        required: false
        default: nil
        example: true
      parent_id:
        description: |
          Filter by all children of these parents. Filter includes supplied parents.
        type: integer[]
        required: false
        example: [1, 5]
      descendants:
        description: |
          When set to `true` and `parent_id` filter criterion is used, descendants of parents are included as well.
        type: boolean
        required: false
        default: false
        example: true
      nomenclature_group:
        description: |
          Filter by nomenclature group.
        type: array
        items:
          enum: [Higher, Family, Genus, Species]
        required: false
        example: [Genus, Species]
      nomenclature_code:
        description: |
          Filter by nomenclature code.
        type: array
        items:
          enum: [ICZN, ICBN, ICN, ICTV]
        required: false
        example: [ICZN, ICBN]
    responses:
      200:
        body:
          application/json:
            type: TaxonNameItem[]
            maxItems: 100
            uniqueItems: true
            example: !include /examples/taxon_names-result-example.json
