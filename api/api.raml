#%RAML 1.0
---
title: TaxonWorks API
documentation:
  - title: Introduction
    content: |
      This is the documentation for external [TaxonWorks](http://taxonworks.org) API endpoints. Documentation source is at [https://github.com/SpeciesFileGroup/taxonworks_api](https://github.com/SpeciesFileGroup/taxonworks_api). In brief this allows users to access data curated in a copy of TaxonWorks via a `user` or `project` (anonymous) level token.
  - title: Servers with live APIs
    content: |
      Each instance of TaxonWorks serves its own API. _Add your instance to this list with a pull request._
      * [Species File Group (production)](https://sfg.taxonworks.org/api/v1) - A production instance of TaxonWorks hosted by the Species File Group (SFG).
      * [SFG Sandbox (sandbox)](https://sandbox.taxonworks.org/api/v1) - A SFG sandbox, may/not be live.
      * [SFG Sandfly (sandbox)](https://sandfly.taxonworks.org/api/v1) - A SFG sandbox, may/not be live.
  - title: Roadmap
    content: |
      Our approach:
      * **v1** (current)
          * Goal is to expose existing internal endpoints that the application is built upon
          * Endpoints are practical, in that they are nearly being used in interfaces, but not necessarily optimized
          * Largely JSON based, and are derived from Rails conventions
      * **v2** (planned)
          * Optimize existing routes, remove nestedness where it makes sense
          * Increase standardization of traits (params) across endpoints
          * Explore delayed responses/ticketing system for long running queries
      * **v3** (planned)
          * Integrate caching other optimizations optimization
          * Perhaps move to a fully cached solution, using GraphQL
          * May move cache to a graph DB or other flattened indexer
  - title: Running an api-console
    content: |
      This both lets you read the API documentation and experiment directly therein against a local rails server (localhost:3000).

      You must have a TaxonWorks instance running at localhost:3000 (`rails s`, see [install_taxonworks](https://github.com/SpeciesFileGroup/install_taxonworks)) before sending API requests though the console.

      Use `npm install` if you haven't already. Then just run `npm start -- --open` (`-- --open` is optional, it will make your browser open the URL the console is being served from).

      Once it is ready to explore you should see something like this:
      ```bash
      $ npm start -- --open

      (OUTPUT OMITTED)

      API console build ready.
      Thanks for using our API tools!

      Files in this directory are available under the following URLs
              applications: http://127.0.0.1:8081
      ```
      **NOTE**: It might display a white screen when the browser opens the URL (specially true with Firefox, Chrome seems inmune to this problem). Refresh a few times until it shows the documentation.
  - title: Other endpoints
    content: |
      From your terminal within the _source_ directory (not this repo) use `rake routes` to get a list of all endpoints.  Endpoints are defined as Rails routes in `/config/routes/api*`.
version: v1
baseUri: https://{host}/api/{version}
baseUriParameters:
  host:
    description: The server host optionally with port at which the API is located
    example: linnaeus.taxonworks.org
protocols: [ HTTPS ]
securitySchemes:
  token:
    type: Pass Through # Not supported by api-console unfortunately, but should be like traits/secured.raml
    description: |
      Token based per-use authentication.
    describedBy:
      headers:
        Authorization:
          description: |
            Generated by the user within the Users profile.
          type: string
          example: Token eUUB4dQCCWlLGzksimEqNQ
mediaType: application/json

resourceTypes:
  collection:
    usage: This resourceType should be used for any collection of items
    description: The collection of <<resourcePathName>>
    get:
      description: Get all <<resourcePathName>>, optionally filtered
  member:
    displayName: id
    description: The id of the <<resourcePathName>> to return.
    get:

types:
  TaxonName: !include /schemas/TaxonNameItem.raml
  TaxonNameAutocomplete: !include /schemas/TaxonNameAutocompleteItem.raml

traits:
  secured: !include /traits/secured.raml
  development: !include /traits/development.raml
  production: !include /traits/production.raml
  future_branch: !include /traits/future_branch.raml
  project_tokenized: !include /traits/project_tokenized.raml
  user_tokenized: !include /traits/user_tokenized.raml
  pageable: !include /traits/pageable.raml
  citations: !include /traits/citations.raml
  data_attributes: !include /traits/data_attributes.raml
  depictions: !include /traits/depictions.raml
  identifiers: !include /traits/identifiers.raml
  notes: !include /traits/notes.raml
  polymorphic: !include /traits/polymorphic.raml
  tags: !include /traits/tags.raml
  users: !include /traits/users/raml

/ New special parameters for model data requests:
  description: |
    Apply to many model data requests: extend[] and embed[] <br />
     e.g., extend[]=citations will add any citation data to the response.<br />
     embed[]= adds a data attribute at the base of the response.<br />
     At this time, embed[] is available in asserted_distributions, biological_associations,
     citations, collecting_events, collection_objects, contents, data_attributes,
     identifiers, images, observation_matrices, observations, otus, people, sources,
     and taxon_names. <br />
#     Embed is available only in taxon_names/{id}/inventory/content?embed[]=depictions.
# Check _metadata, loan_items, combinations, observations, type_materials,
# geographic_areas, protocal_relationships, observation_matrix_rows, bioogical_relationships,
# controlled_vocabulary_terms, common_names, roles, users, biological_relationshup_types,
# taxonomy, summary, extracts, depictions
/:
  description: Base of the API. Includes an index of open projects indexed by project_token.
  get:
    responses:
      200:
        body:
          application/json:
            example:
              { "success": true,"open_projects": [ { "mFPoRURskHhXu29nbAxoNy": "My TaxonWorks Project" } ] }

/ping:
  description: An open endpoint to test for life.
  get:
    responses:
      200:
        body:
          application/json:
            example:
              { "pong": true }

/user_authenticated:
  description: A single purpose route to test your User token.
  is: secured
  get:
    responses:
      200:
        body:
          application/json:
            example:
              { "success": true }

/project_authenticated:
  description: A single purpose route to test your Project token.
  is: [ project_tokenized ]
  get:
    responses:
      200:
        body:
          application/json:
            example:
              { "success": true,"open_projects": [ { "mFPoRURskHhXu29nbAxoNy": "My TaxonWorks Project" } ] }

/both_authenticated:
  description: A single purpose route to test both User and Project tokens.
  is: [ secured, project_tokenized ]
  get:
    responses:
      200:
        body:
          application/json:
            example:
              { "success": true }

/activity:
  is: [ secured, projecttokenized ]
  description: See https://rdoc.taxonworks.org/Api/V1/StatsController.html
  type: collection
  get: !include /searches/Activity-search.raml

/asserted_distributions:
  is: [ secured, project_tokenized ]
  description: See Overview at http://rdoc.taxonworks.org/AssertedDistribution.html
                extend[]= available for [otu, geographic_area]
  type: collection
  get: !include /searches/AssertedDistributions-search.raml
  /{id}:
    is: [ secured, project_tokenized ]
    get:
      description: Returns AssertedDistribution instance data for ID in URI.
      queryParameters:
        project_id:
          description: |
            Project identifier. In the absence of a project token you must provide this parameter.
          type: integer
          required: false
          example: 4

/biological_associations:
  is: [ secured, project_tokenized ]
  description: See Overview at http://rdoc.taxonworks.org/BiologicalAssociation.html
                extend[]= available for [biological_relationship, subject,
                 subject_biological_relationship_types, family_names, object,
                 object_biological_relationship_types]
  type: collection
  get: !include /searches/BiologicalAssociations-search.raml
  /{id}:
    is: [ secured, project_tokenized ]
    get:
      description: Returns BiologicalAssociations instance data for ID in URI.
      queryParameters:
        project_id:
          description: |
            Project identifier. In the absence of a project token you must provide this parameter.
          type: integer
          required: false
          example: 2

/citations:
  is: [ secured, project_tokenized ]
  description: See Overview at http://rdoc.taxonworks.org/Citation.html
      extend[]= available for [citation_object, citation_topics, source, target_document]
  type: collection
  get: !include /searches/Citations-search.raml
  /{id}:
    is: [ secured, project_tokenized ]
    get:
      description: Returns Citations instance data for ID in URI.
      queryParameters:
        project_id:
          description: |
            Project identifier. In the absence of a project token you must provide this parameter.
          type: integer
          required: false
          example: 4

/collecting_events:
  is: [ secured, user_tokenized ]
  description: See Overview at http://rdoc.taxonworks.org/CollectingEvent.html
                extend[]= available for [parent, roles]
  type: collection
  get: !include /searches/CollectingEvents-search.raml
  /{id}:
    is: [ secured, project_tokenized ]
      get:
        description: Returns Identifiers metadata for this ID - caution, project-agnostic identifiers not returned.

/collection_objects:
  is: [ secured, user_tokenized ]
  description: See Overview at http://rdoc.taxonworks.org/CollectionObject.html
                Extend[]= available for [container, dwc_fields, type_material, taxon_determination_images]
  type: collection
  get: !include /searches/CollectionObjects-search.raml
  /{id}:
    is: [ secured, project_tokenized ]
    get:
      description: Returns collection objects data for ID in URI.
  /{id}/dwc:
    is: [ secured, project_tokenized ]
    get:
      description: Get DWC formatted data for collecton object with ID in URI.

/contents:
  is: [ secured, project_tokenized ]
  description: See Overview at http://rdoc.taxonworks.org/Content.html
                extend[]= available for [public_content, otu, topic]
  type: collection
  get: !include /searches/Contents-search.raml
  /{id}:
    is: [ secured, project_tokenized ]
    get:
      description: Returns Content instance data for ID in URI.
      queryParameters:
        project_id:
          description: |
            Project identifier. In the absence of a project token you must provide this parameter.
          type: integer
          required: false
          example: 2

/data_attributes:
  is: [ secured, project_tokenized ]
  description: See Overview at http://rdoc.taxonworks.org/Data_attribute.html
  extend[]= available for [annotated_object, predicate]
  type: collection
  get: !include /searches/DataAttributes-search.raml
  /{id}:
    is: [ secured, project_tokenized ]
    get: !include /searches/DataAttributesID-search.raml

/downloads:
  is: [ secured, project_tokenized ]
  description: See Overview at http://rdoc.taxonworks.org/Download.html
  type: collection
  /{id}:
    is: [ secured, project_tokenized ]
    get:
      description: Returns Download metadata instance
      queryParameters:
        project_id:
          description: |
            Project identifier. In the absence of a project token you must provide this parameter.
          type: integer
          required: false
          example: 1
  /{id}/{file}:
    is: [ secured, project_tokenized ]
    get:
      description: Downloads metadata instance to specified file path
      queryParameters:
        project_id:
          description: |
            Project identifier. In the absence of a project token you must provide this parameter.
          type: integer
          required: false

/dwc_occurrences:
  is: [ secured, project_tokenized ]
  description: See Overview at https://rdoc.taxonworks.org/DwcOccurrence.html
  type: collection
  get: !include /searches/DWCOccurrences-search.raml

/identifers:
  is: [ secured, user_tokenized ]
  description: See Overview at http://rdoc.taxonworks.org/Identifier.html
                  extend[]= available for [namespace]
  type: collection
  get: !include /searches/Identifiers-search.raml
  /{id}:
    is: [ secured, project_tokenized ]
      get:
        description: Returns Identifiers metadata for this ID in URI - caution, project-agnostic identifiers not returned.

/images:
  is: [ secured, project_tokenized ]
  description: See Overview at http://rdoc.taxonworks.org/Observation.html
                extend[]= available for [depictions, attribution, source]
  type: collection
  get: !include /searches/Images-search.raml
  /{id}:
    is: [ secured, project_tokenized ]
    get:
      description: Returns Image data for ID in URI.
      queryParameters:
        project_id:
          description: |
            Project identifier. In the absence of a project token you must provide this parameter.
          type: integer
          required: false
          example: 4
  /{id}/file:
    is: [ secured, project_tokenized ]
      get:
        description: Returns Image data for ID in URI as a file.
/notes:
  is: [ secured, project_tokenized, pageable: { default_per: 50, max_per: 1000 } ]
  description: See Overview at http://rdoc.taxonworks.org/Note.html
  type: collection
  get: !include /searches/Notes-search.raml
  /{id}:
    is: [ secured, project_tokenized ]
    get:
      description: Returns Note instance data for ID in URI.
      queryParameters:
        project_id:
          description: |
            Project identifier. In the absence of a project token you must provide this parameter.
          type: integer
          required: false
          example: 2

/observation_matrices:
  is: [ secured, project_tokenized ]
  description: See Overview at http://rdoc.taxonworks.org/ObservationMatrices.html
                extend[]= available for [rows, columns]
  type: collection
  get: !include /searches/ObservationMatrices-search.raml
  /{id}:
    is: [ secured, project_tokenized ]
    get:
      description: Returns Observation matrices data for ID in URI.
      queryParameters:
        project_id:
          description: |
            Project identifier. In the absence of a project token you must provide this parameter.
          type: integer
          required: false
  /{id}/key:
    is: [ secured, project_tokenized ]
    get:
      description: Returns Observation matrices data for ID in URI.
      queryParameters:
        project_id:
          description: |
            Project identifier. In the absence of a project token you must provide this parameter.
          type: integer
          required: false

/observations:
  is: [ secured, project_tokenized ]
  description: See Overview at http://rdoc.taxonworks.org/Observation.html
                extend[]= available for [character_state, depictions]
  type: collection
  get: !include /searches/Observations-search.raml
  /{id}:
    is: [ secured, project_tokenized ]
    get:
      description: Returns Observation instance data for ID in URI.
      queryParameters:
        project_id:
          description: |
            Project identifier. In the absence of a project token you must provide this parameter.
          type: integer
          required: false
          example: 4

/otus:
  is: [ citations, data_attributes, notes, tags, users, secured, project_tokenized ]
  description: See Overview at http://rdoc.taxonworks.org/Otu.html
                extend[]= available for [parents]
  type: collection
  get: !include /searches/Otus-search.raml
  /autocomplete:
    is: [ secured, project_tokenized ]
    get: !include /searches/Otus-autocomplete.raml
  /{id}:
    is: [ secured, project_tokenized ]
    get: !include /searches/OtusId-search.raml
  /{otu_id}/inventory/content:
    is: [ secured, project_tokenized ]
    get:  !include /searches/OtusIdInventoryContent.raml
  /{otu_id}/inventory/distribution:
    is: [ secured, project_tokenized ]
    get:  !include /searches/OtusIdInventoryDistribution.raml
  /{otu_id}/inventory/images:
    is: [ secured, project_tokenized ]
    get:  !include /searches/OtusIdInventoryImages.raml
  /{id}/inventory/nomenclature_citations:
    is: [ secured, project_tokenized ]
    get:  !include /searches/OtusIdInventoryNomenclatureCitations.raml
  /{id}/inventory/taxonomy:
    is: [ secured, project_tokenized ]
    get:  !include /searches/OtusIdInventoryTaxonomy.raml
  /{id}/inventory/type_material:
    is: [ secured, project_tokenized ]
    get:  !include /searches/OtusIdInventoryTypeMaterial.raml

/people:
  is: [ secured, user_tokenized ]
  description: See Overview at http://rdoc.taxonworks.org/Person.html
                extend[]= available for [roles]
  type: collection
  get: !include /searches/People-search.raml
  /{id}:
    is: [ secured, user_tokenized ]
    get:
      description: returns people data for ID in URI.

/sources:
  is: [ secured, project_tokenized ]
  description: See Overview at http://rdoc.taxonworks.org/Source.html
                extend[]= available for [roles, documents]
  type: collection
  get: !include /searches/Sources-search.raml
  /{id}:
    is: [ secured, project_tokenized ]
    get:
      description: Returns Sources metadata for ID in URI.

/taxon_name_classifications:
  is: [ secured, project_tokenized ]
  description: See Overview at http://rdoc.taxonworks.org/TaxonNameClassification.html
  type: collection
  get: !include /searches/TaxonNameClassifications-search.raml
  /{id}:
    is: [ secured, project_tokenized ]
    get:  !include /searches/TaxonNameClassificationsID-search.raml

/taxon_name_relationships:
  is: [ secured, project_tokenized ]
  description: See Overview at http://rdoc.taxonworks.org/TaxonNameRelationship.html
  type: collection
  get: !include /searches/TaxonNameRelationships-search.raml
  /{id}:
    is: [ secured, project_tokenized ]
    get: !include /searches/TaxonNameRelationshipsID.raml
      description: Returns taxon name relationships instance data.

/taxon_names:
  is: [ secured, project_tokenized ]
  description: See Overview at http://rdoc.taxonworks.org/TaxonName.html
                extend[]= available for [otus, roles, ancestor_ids, parent, children,
                 type_taxon_name_relationship]
  type: collection
  get: !include /searches/TaxonName-search.raml
  /autocomplete:
    is: [ secured, project_tokenized ]
    get: !include /searches/TaxonName-autocomplete.raml
  /{id}:
    is: [ secured, project_tokenized ]
    get: !include /searches/TaxonNameID-search.raml
  /{id}/inventory/summary:
    is: [ secured, project_tokenized ]
    get: !include /searches/TaxonNameIDInventorySummary.raml
  /{id}/inventory/summary&embed[]=depictions:
    is: [ secured, project_tokenized ]
    get: !include /searches/TaxonNameIDInventorySummaryEmbed.raml
  /{id}/inventory/summary&extend[]=name_elements:
    is: [ secured, project_tokenized ]
    get: !include /searches/TaxonNameIDInventorySummaryExtend.raml
  /parse:
    is: [ secured, project_tokenized ]
    get: !include /searches/TaxonNameParse.raml




