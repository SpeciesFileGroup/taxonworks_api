is: [pageable: { default_per: 50, max_per: 1000 }]
queryParameters:
  active_after_year:
    description: |
      Restrict search to persons active after this year date
    type: integer
    required: false
  active_before_year:
    description: |
      Restrict search to persons active before this year date
    type: integer
    required: false
  born_after_year:
    description: |
      Restrict search to persons who were born after this year date
  born_before_year:
    description: |
      Restrict search to persons who were born before this year date
    type: integer
    required: false
  died_after_year:
    description: |
      Restrict search to persons who died after this year date
    type: integer
    required: false
  died_before_year:
    description: |
      Restrict search to persons who died before this year date
    type: integer
    required: false
  first_name:
    description: |
      Filter by person first name or fragment. Matching is case insensitive. Use " " for "and". See also `exact`.
    type: string
    required: false
#    example: "Megan"
  identifier:
    description:  |
      Identifier contains the identifier string.
    type: string
    required: false
  identifier_end:
    description:  |
      Identifier ends with the identifier string.
    type: string
    required: false
  identifier_exact:
    description:  |
      Identifier strng must exactly match.
    type: string
    required: false
  identifier_start:
    description:  |
      Identifier starts with the identifier string.
    type: string
    required: false
  last_name:
    description: |
      Filter by person last name or fragment. Matching is case insensitive. Use " " for "and". See also `exact`.
    type: string
    required: false
#    example: "Murphey"
  last_name_starts_with:
    description: |
      Filter by person last name fragment (from beginning). Matching is case insensitive. Use " " for "and". See also `exact`.
    type: string
    required: false
    example: "Murp"
#  levenshtein_cuttoff:
#    description:  |
#      The maximum Levenshtein distance to be used in the fuzzy match for name searches.
#    type: integer
#    required: false
  person_wildcard[]:
    description:  |
      Wildcard parameter(s)
    type: string
    required: false
  role:
    description: |
      Filter by a person's role, e.g., SourceAuthor, SourceEditor, SourceSource, TaxonNameAuthor. Matching is case insensitive. Use " " for "and". See also `exact`.
    type: string array
    required: false
    example: "SourceAuthor"
  role[]:
    description: |
      Filter by person role(s), e.g., &role[]=SourceAuthor&role[]=TaxonNameAuthor.
    type: string array
    required: false
    example: "SourceAuthor"
  project_id:
    description: |
      The project for the source search
    type: integer
    required: true
    example:  2
  name:
    description:|
      Search for names containing this string.
    type: strng
    required: false
  source_id:
    description: |
      Source identifier for a single source.
    type: integer
    required: false
  tags:
    description:  |
      Optional tags for person search.
    requied:  false
  user_date_end:
    description:  |
      User
    required: false
  user_date_start:
    description:  |
      User
    required: false
#  user_id:
#    description:  |
#      User ID
#    required: false


responses:
  200:
    body:
      application/json:
        type: Person[]
        maxItems: 100
        uniqueItems: true
        example: !include /examples/people-result-example.json
