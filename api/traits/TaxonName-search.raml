is: [pageable: { default_per: 100, max_per: 1000 }]
queryParameters:
  project_id:
    description: |
      Project identifier. In the absence of a project token you must provide this parameter.
    type: integer
    required: false
    example: 1
  name:
    description: |
      Filter to apply on full taxon name (`cached` property). Matching is case insensitive. See also `exact`.
    type: string
    required: false
    example: "Aus"
  author:
    description: |
      Filter by authors (inside `cached_author_year` property). Matching is case insensitive. Use "&" for "and". See also `exact`.
    type: string
    required: false
    example: "Smith & Johnson, 2019"
  authors:
    description: |
      When `true` then only return taxon names that have an author string present.
    type: boolean
    required: false
    example: [true, false, TRUE, FALSE, True, False]
  citations:
    description: |
      When `true` then only return taxon names that have citations attached to them.
    type: boolean
    required: false
    example: [true, false, TRUE, FALSE, True, False]
  otus:
    description: |
      When `true` then only return taxon names that are linked to one or more Otus.
    type: boolean
    required: false
    example: [true, false, TRUE, FALSE, True, False]
  type_metadata:
    description: |
      When `true` then only return taxon names that are linked to a type specimen (collection object).
    type: boolean
    required: false
    example: [true, false, TRUE, FALSE, True, False]
  year:
    description: |
      Filter by authority year (inside `cached_author_year` property). Format is 'YYYY'.
    type: string
    pattern: "[0-9]{4}"
    required: false
    example: "2019"
  exact:
    description: |
      True if filter matching must be exact, false if partial matches are allowed.
    type: boolean
    required: false
    default: false
    example: true
  updated_since:
    description: |
      Names updated (modified_at property) since this datetime.
    type: datetime
    required: false
    example: 2019-05-20T13:30:00
  validity:
    description: |
      Filter by validity. True if only valid, false if only invalid, nil if both
    type: string | nil
    required: false
    default: nil
    example: true
  taxon_name_id[]:
    description: |
      Return only taxon names with these ids. To also return children see `descendants`.
    type: integer[]
    required: false
    example: [1, 5]
  descendants:
    description: |
      When set to `true` and one or more `taxon_name_id` values are provided then additionally return the children of all taxon_name_ids.  Has no effect if `taxon_name_id` is not provided.
    type: boolean
    required: false
    default: false
    example: true
  nomenclature_group[]:
    description: |
      Filter by nomenclature group.
    type: array
    items:
      enum: [Higher, Family, Genus, Species]
    required: false
    example: [Genus, Species]
  nomenclature_code[]:
    description: |
      Filter by nomenclature code.
    type: array
    items:
      enum: [ICZN, ICBN, ICN, ICTV]
    required: false
    example: [ICZN, ICBN]
  taxon_name_relationship_type[]:
    description: |
      Filter by names having relationships of these types
    type: array
    required: false
    example: [TaxonNameRelationship::Iczn::Invalidating]
  leaves:
    description: |
      If 'true' filters by names having no descendents or with descendants if 'false'.
    type: boolean | nil
    required: false
    default: nil
    example: true
  taxon_name_type[]:
    description: |
      Return only taxon names of the provided class. Case sensitive. Only `Protonym`, `Combination`, and `Hybrid` are supported.
    type: string
    required: false
    example: [Protonym, Combination, Hybrid]
responses:
  200:
    body:
      application/json:
        type: TaxonNameItem[]
        maxItems: 100
        uniqueItems: true
        example: !include /examples/taxon_names-result-example.json
